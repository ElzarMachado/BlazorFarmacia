// <auto-generated />
using System;
using BlazorFarmacia.Server.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorFarmacia.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BlazorFarmacia.Server.Model.Entities.Clientes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VentasId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VentasId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("BlazorFarmacia.Server.Model.Entities.Empleados", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VentasId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VentasId");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("BlazorFarmacia.Server.Model.Entities.Lotes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FechaCaducidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductosLotesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductosLotesId");

                    b.ToTable("Lotes");
                });

            modelBuilder.Entity("BlazorFarmacia.Server.Model.Entities.Productos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Fila")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pasillo")
                        .HasColumnType("int");

                    b.Property<int>("ProductosLotesId")
                        .HasColumnType("int");

                    b.Property<int>("PuntosCompra")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductosLotesId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("BlazorFarmacia.Server.Model.Entities.ProductosLotes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdLote")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int?>("VentasId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VentasId");

                    b.ToTable("ProductosLotes");
                });

            modelBuilder.Entity("BlazorFarmacia.Server.Model.Entities.Ventas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Fecha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Folio")
                        .HasColumnType("int");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdEmpleado")
                        .HasColumnType("int");

                    b.Property<int>("IdProductosLotes")
                        .HasColumnType("int");

                    b.Property<int>("Importe")
                        .HasColumnType("int");

                    b.Property<int>("TotalVenta")
                        .HasColumnType("int");

                    b.Property<int>("ValorUnitario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("BlazorFarmacia.Server.Model.Entities.Clientes", b =>
                {
                    b.HasOne("BlazorFarmacia.Server.Model.Entities.Ventas", "Ventas")
                        .WithMany("Clientes")
                        .HasForeignKey("VentasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("BlazorFarmacia.Server.Model.Entities.Empleados", b =>
                {
                    b.HasOne("BlazorFarmacia.Server.Model.Entities.Ventas", "Ventas")
                        .WithMany("Empleados")
                        .HasForeignKey("VentasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("BlazorFarmacia.Server.Model.Entities.Lotes", b =>
                {
                    b.HasOne("BlazorFarmacia.Server.Model.Entities.ProductosLotes", "ProductosLotes")
                        .WithMany("Lotes")
                        .HasForeignKey("ProductosLotesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductosLotes");
                });

            modelBuilder.Entity("BlazorFarmacia.Server.Model.Entities.Productos", b =>
                {
                    b.HasOne("BlazorFarmacia.Server.Model.Entities.ProductosLotes", "ProductosLotes")
                        .WithMany("Productos")
                        .HasForeignKey("ProductosLotesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductosLotes");
                });

            modelBuilder.Entity("BlazorFarmacia.Server.Model.Entities.ProductosLotes", b =>
                {
                    b.HasOne("BlazorFarmacia.Server.Model.Entities.Ventas", null)
                        .WithMany("ProductosLotes")
                        .HasForeignKey("VentasId");
                });

            modelBuilder.Entity("BlazorFarmacia.Server.Model.Entities.ProductosLotes", b =>
                {
                    b.Navigation("Lotes");

                    b.Navigation("Productos");
                });

            modelBuilder.Entity("BlazorFarmacia.Server.Model.Entities.Ventas", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Empleados");

                    b.Navigation("ProductosLotes");
                });
#pragma warning restore 612, 618
        }
    }
}
